gobbledygook = b'IyEvYmluL2VudiBweXRob24zCmltcG9ydCBvcwppbXBvcnQgcmFuZG9tCgpNQVhfSU5DT1JSRUNUID0gOApXT1JEX0ZJTEUgPSAiZWFzeV93b3Jkcy50eHQiCgoKZGVmIG1haW4oKToKICAgIHdvcmQgPSBwaWNrX3dvcmQoV09SRF9GSUxFKQogICAgZ3Vlc3MgPSAiLSIgKiBsZW4od29yZCkKICAgIGluY29ycmVjdF9jb3VudCA9IDAKCiAgICB3aGlsZSBpbmNvcnJlY3RfY291bnQgPCBNQVhfSU5DT1JSRUNUIGFuZCB3b3JkICE9IGd1ZXNzOgogICAgICAgIHByaW50X3NjcmVlbihpbmNvcnJlY3RfY291bnQsIGd1ZXNzKQoKICAgICAgICBsZXR0ZXIgPSBnZXRfbGV0dGVyKCkKCiAgICAgICAgaWYgaXNfbGV0dGVyX2luX3dvcmQobGV0dGVyLCB3b3JkKToKICAgICAgICAgICAgZ3Vlc3MgPSB1cGRhdGVfZ3Vlc3MoZ3Vlc3MsIGxldHRlciwgd29yZCkKICAgICAgICBlbHNlOgogICAgICAgICAgICBpbmNvcnJlY3RfY291bnQgKz0gMQoKICAgIHByaW50X3NjcmVlbihpbmNvcnJlY3RfY291bnQsIGd1ZXNzKQogICAgcHJpbnQoZiJUaGUgd29yZCB3YXMge3dvcmR9XG4iKQoKICAgIGlmIHdvcmQgPT0gZ3Vlc3M6CiAgICAgICAgcHJpbnQoIllvdSBXaW4hIikKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIllvdSBMb3NlISIpCgoKZGVmIHByaW50X3NjcmVlbihpbmNvcnJlY3RfY291bnQsIGd1ZXNzKToKICAgIGNsZWFyX3NjcmVlbigpCiAgICBwcmludF9jbG90aGVzbGluZShpbmNvcnJlY3RfY291bnQpCiAgICBwcmludChmIlxue2d1ZXNzfVxuIikKCgpkZWYgY2xlYXJfc2NyZWVuKCk6CiAgICBwcmludCgiXDAzM1tIXDAzM1tKIiwgZW5kPSIiKQoKCmRlZiBwaWNrX3dvcmQod29yZF9maWxlbmFtZSk6CiAgICB3b3JkX2ZpbGUgPSBvcGVuKHdvcmRfZmlsZW5hbWUpCiAgICBhbGxfdGV4dCA9IHdvcmRfZmlsZS5yZWFkKCkKICAgIGFsbF93b3JkcyA9IGFsbF90ZXh0LnNwbGl0bGluZXMoKQogICAgd29yZF9maWxlLmNsb3NlKCkKCiAgICB3b3JkID0gcmFuZG9tLmNob2ljZShhbGxfd29yZHMpCiAgICByZXR1cm4gd29yZAoKCmRlZiBnZXRfbGV0dGVyKCk6CiAgICBwcmludCgiR3Vlc3MgYSBsZXR0ZXIuLi5pZiB5b3UgZGFyZSEiKQogICAgdXNlcl9pbnB1dCA9IGlucHV0KCI+ICIpCiAgICByZXR1cm4gdXNlcl9pbnB1dFswXQoKCmRlZiBpc19sZXR0ZXJfaW5fd29yZChsZXR0ZXIsIHdvcmQpOgogICAgcmV0dXJuIGxldHRlciBpbiB3b3JkCgoKZGVmIHVwZGF0ZV9ndWVzcyhvbGRfZ3Vlc3MsIGxldHRlciwgIHdvcmQpOgogICAgbmV3X2d1ZXNzID0gIiIKICAgIGZvciBpIGluIHJhbmdlKGxlbihvbGRfZ3Vlc3MpKToKICAgICAgICBpZiB3b3JkW2ldID09IGxldHRlcjoKICAgICAgICAgICAgbmV3X2d1ZXNzID0gbmV3X2d1ZXNzICsgbGV0dGVyCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbmV3X2d1ZXNzID0gbmV3X2d1ZXNzICsgb2xkX2d1ZXNzW2ldCgogICAgcmV0dXJuIG5ld19ndWVzcwoKCmRlZiBwcmludF9jbG90aGVzbGluZShpbmNvcnJlY3RfY291bnQpOgogICAgaWYgTUFYX0lOQ09SUkVDVCAtIGluY29ycmVjdF9jb3VudCA9PSA4OgogICAgICAgIGNsb3RoZXNsaW5lID0gciIiIgo9PT09PSE9PT09PSE9PT09PT09IT09PT09IT09PT09PT0hPT09PT0hPT09PT09PSE9PT09PSE9PT09PQogICAgLycnJ1YnJydcICAgICAvJycnVicnJ1wgICAgIC8nJydWJycnXCAgICAgLycnJ1YnJydcCiAgIC8gICAgICAgICBcICAgLyAgICAgICAgIFwgICAvICAgICAgICAgXCAgIC8gICAgICAgICBcCiAgJy0ifCAgICAgfCItJyAnLSJ8ICAgICB8Ii0nICctInwgICAgIHwiLScgJy0ifCAgICAgfCItJwogICAgIHwgICAgIHwgICAgICAgfCAgICAgfCAgICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwKICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwgICAgICAgfCAgICAgfCAgICAgICB8ICAgICB8CiAgICAgYGBgYGBgYCAgICAgICBgYGBgYGBgICAgICAgIGBgYGBgYGAgICAgICAgYGBgYGBgYAoiIiIKICAgIGVsaWYgTUFYX0lOQ09SUkVDVCAtIGluY29ycmVjdF9jb3VudCA9PSA3OgogICAgICAgIGNsb3RoZXNsaW5lID0gciIiIgo9PT09PSE9PT09PSE9PT09PT09IT09PT09IT09PT09PT0hPT09PT0hPT09PT09PSE9PT09PT0KICAgIC8nJydWJycnXCAgICAgLycnJ1YnJydcICAgICAvJycnVicnJ1wgICAgIC8nXAogICAvICAgICAgICAgXCAgIC8gICAgICAgICBcICAgLyAgICAgICAgIFwgICAvICAgLlwKICAnLSJ8ICAgICB8Ii0nICctInwgICAgIHwiLScgJy0ifCAgICAgfCItJyAgJ3wgID0nCiAgICAgfCAgICAgfCAgICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwgICAgICB8ICAgfAogICAgIHwgICAgIHwgICAgICAgfCAgICAgfCAgICAgICB8ICAgICB8ICAgICAgfCAgIHwKICAgICBgYGBgYGBgICAgICAgIGBgYGBgYGAgICAgICAgYGBgYGBgYCAgICAgIGAtLl98CiIiIgoKICAgIGVsaWYgTUFYX0lOQ09SUkVDVCAtIGluY29ycmVjdF9jb3VudCA9PSA2OgogICAgICAgIGNsb3RoZXNsaW5lID0gciIiIgo9PT09PSE9PT09PSE9PT09PT09IT09PT09IT09PT09PT0hPT09PT0hPT09PT09PT09PT09PT0KICAgIC8nJydWJycnXCAgICAgLycnJ1YnJydcICAgICAvJycnVicnJ1wKICAgLyAgICAgICAgIFwgICAvICAgICAgICAgXCAgIC8gICAgICAgICBcCiAgJy0ifCAgICAgfCItJyAnLSJ8ICAgICB8Ii0nICctInwgICAgIHwiLScKICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwgICAgICAgfCAgICAgfAogICAgIHwgICAgIHwgICAgICAgfCAgICAgfCAgICAgICB8ICAgICB8CiAgICAgYGBgYGBgYCAgICAgICBgYGBgYGBgICAgICAgIGBgYGBgYGAKIiIiCiAgICBlbGlmIE1BWF9JTkNPUlJFQ1QgLSBpbmNvcnJlY3RfY291bnQgPT0gNToKICAgICAgICBjbG90aGVzbGluZSA9IHIiIiIKPT09PT0hPT09PT0hPT09PT09PSE9PT09PSE9PT09PT09IT09PT09PT09PT09PT09PT09PT09CiAgICAvJycnVicnJ1wgICAgIC8nJydWJycnXCAgICAgLydcCiAgIC8gICAgICAgICBcICAgLyAgICAgICAgIFwgICAvICAgLlwKICAnLSJ8ICAgICB8Ii0nICctInwgICAgIHwiLScgICd8ICA9JwogICAgIHwgICAgIHwgICAgICAgfCAgICAgfCAgICAgIHwgICB8CiAgICAgfCAgICAgfCAgICAgICB8ICAgICB8ICAgICAgfCAgIHwKICAgICBgYGBgYGBgICAgICAgIGBgYGBgYGAgICAgICBgLS5ffAoiIiIKICAgIGVsaWYgTUFYX0lOQ09SUkVDVCAtIGluY29ycmVjdF9jb3VudCA9PSA0OgogICAgICAgIGNsb3RoZXNsaW5lID0gciIiIgo9PT09PSE9PT09PSE9PT09PT09IT09PT09IT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgIC8nJydWJycnXCAgICAgLycnJ1YnJydcCiAgIC8gICAgICAgICBcICAgLyAgICAgICAgIFwKICAnLSJ8ICAgICB8Ii0nICctInwgICAgIHwiLScKICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwKICAgICB8ICAgICB8ICAgICAgIHwgICAgIHwKICAgICBgYGBgYGBgICAgICAgIGBgYGBgYGAKIiIiCiAgICBlbGlmIE1BWF9JTkNPUlJFQ1QgLSBpbmNvcnJlY3RfY291bnQgPT0gMzoKICAgICAgICBjbG90aGVzbGluZSA9IHIiIiIKPT09PT0hPT09PT0hPT09PT09PSE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAvJycnVicnJ1wgICAgIC8nXAogICAvICAgICAgICAgXCAgIC8gICAuXAogICctInwgICAgIHwiLScgICd8ICA9JwogICAgIHwgICAgIHwgICAgICB8ICAgfAogICAgIHwgICAgIHwgICAgICB8ICAgfAogICAgIGBgYGBgYGAgICAgICBgLS5ffAoiIiIKICAgIGVsaWYgTUFYX0lOQ09SUkVDVCAtIGluY29ycmVjdF9jb3VudCA9PSAyOgogICAgICAgIGNsb3RoZXNsaW5lID0gciIiIgo9PT09PSE9PT09PSE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KICAgIC8nJydWJycnXAogICAvICAgICAgICAgXAogICctInwgICAgIHwiLScKICAgICB8ICAgICB8CiAgICAgfCAgICAgfAogICAgIGBgYGBgYGAKIiIiCiAgICBlbGlmIE1BWF9JTkNPUlJFQ1QgLSBpbmNvcnJlY3RfY291bnQgPT0gMToKICAgICAgICBjbG90aGVzbGluZSA9IHIiIiIKPT09PT0hPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAgICAvJ1wKICAgLyAgIC5cCiAgICd8ICA9JwogICAgfCAgIHwKICAgIHwgICB8CiAgICBgLS5ffAoiIiIKICAgIGVsc2U6CiAgICAgICAgY2xvdGhlc2xpbmUgPSByIiIiCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKCgoKCgoiIiIKCiAgICBwcmludChjbG90aGVzbGluZSkKCgptYWluKCkK'

import base64 as b

eval(compile(b.b64decode(gobbledygook),'<string>','exec'))
